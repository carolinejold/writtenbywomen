{"ast":null,"code":"var _jsxFileName = \"/Users/carolineold/Documents/SPRING20/HACKDAY/writtenbywomen/client/src/components/Authors.js\";\nimport React, { Component } from 'react';\n\nclass Authors extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/api/authors').then(res => res.json()).then(data => this.setState({\n      data: data\n    }));\n  }\n\n  render() {\n    // TODO - remove <p> tags etc from bios, or sort this out in another way\n    // MOVE STATE FROM AUTHORS TO APP\n    // TODO - stop journalists being repeated\n    // TODO - EITHER make sure word \"she\" appears in bio, or make list of unisex names and disallow them\n    // TODO - implement image placeholder for when image and bios not available\n    // TODO - refactor class names to make BAME or whatever \n    // TODO - implement search tos earch for topics/name, bring in more data\n    const authorArray = this.state.data.map((author, index) => {\n      let cleanAuthor;\n\n      if (author.bio !== undefined) {\n        cleanAuthor = author.bio.replace(/(<([^>]+)>)/ig, '');\n        console.log(cleanAuthor);\n      }\n\n      if (author.bio === undefined || !author) {\n        cleanAuthor = 'No bio';\n        console.log(cleanAuthor);\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"author-child\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"author-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, author.webTitle), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"author-img\",\n        src: author.bylineImageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 69\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        href: author.webUrl,\n        className: \"author-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"Browse \", author.webTitle, \"'s articles\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, cleanAuthor));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, authorArray);\n  }\n\n}\n\nexport default Authors;","map":{"version":3,"sources":["/Users/carolineold/Documents/SPRING20/HACKDAY/writtenbywomen/client/src/components/Authors.js"],"names":["React","Component","Authors","constructor","state","data","componentDidMount","fetch","then","res","json","setState","render","authorArray","map","author","index","cleanAuthor","bio","undefined","replace","console","log","webTitle","bylineImageUrl","webUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQH,IAAI,IAAI,KAAKM,QAAL,CAAc;AAAEN,MAAAA,IAAI,EAAEA;AAAR,KAAd,CAFhB;AAGD;;AAGDO,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,UAAMC,WAAW,GAAG,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzD,UAAIC,WAAJ;;AACA,UAAIF,MAAM,CAACG,GAAP,KAAeC,SAAnB,EAA8B;AAC5BF,QAAAA,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAWE,OAAX,CAAmB,eAAnB,EAAoC,EAApC,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACD;;AACD,UAAIF,MAAM,CAACG,GAAP,KAAeC,SAAf,IAA4B,CAACJ,MAAjC,EAAyC;AACvCE,QAAAA,WAAW,GAAG,QAAd;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACD;;AAED,0BAAQ;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,QAAA,GAAG,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACR;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BD,MAAM,CAACQ,QAApC,CADQ,eAER;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAER,MAAM,CAACS,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFQ,eAEsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFtD,eAGR;AAAG,QAAA,IAAI,EAAET,MAAM,CAACU,MAAhB;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwDV,MAAM,CAACQ,QAA/D,gBAHQ,eAIR;AAAG,QAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBN,WAAjB,CAJQ,CAAR;AAMD,KAjBmB,CAApB;AAmBA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,WADH,CADF;AAKD;;AAjD6B;;AAoDhC,eAAeX,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Authors extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/api/authors')\n      .then(res => res.json())\n      .then(data => this.setState({ data: data }));\n  }\n\n\n  render() {\n    // TODO - remove <p> tags etc from bios, or sort this out in another way\n    // MOVE STATE FROM AUTHORS TO APP\n    // TODO - stop journalists being repeated\n    // TODO - EITHER make sure word \"she\" appears in bio, or make list of unisex names and disallow them\n    // TODO - implement image placeholder for when image and bios not available\n    // TODO - refactor class names to make BAME or whatever \n    // TODO - implement search tos earch for topics/name, bring in more data\n\n\n    const authorArray = this.state.data.map((author, index) => {\n      let cleanAuthor;\n      if (author.bio !== undefined) {\n        cleanAuthor = author.bio.replace(/(<([^>]+)>)/ig, '');\n        console.log(cleanAuthor);\n      }\n      if (author.bio === undefined || !author) {\n        cleanAuthor = 'No bio';\n        console.log(cleanAuthor); \n      }\n      \n      return (<li className=\"author-child\" key={index}>\n      <h4 className=\"author-name\">{author.webTitle}</h4>\n      <img className=\"author-img\" src={author.bylineImageUrl}></img><br/>\n      <a href={author.webUrl} className=\"author-link\">Browse {author.webTitle}'s articles</a>\n      <p className=\"\">{cleanAuthor}</p>\n    </li>);\n    });\n\n    return (\n      <div className=\"author-container\">\n        {authorArray}\n      </div>\n    );\n  }\n}\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}